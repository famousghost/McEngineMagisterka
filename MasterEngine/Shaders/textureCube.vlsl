#version 330 core

layout(location = 0) in vec3 vertexCoords;
layout(location = 1) in vec3 normalCoords;
layout(location = 2) in vec2 textureCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 LightSpaceMatrix;

out vec3 wPos;
out vec3 normCoords;
out vec2 texturesCoords;
out vec4 fragPosInLightSpace;

void main()
{
	vec4 worldPos = model * vec4(vertexCoords, 1.0);
	normCoords = normalize(mat3(transpose(inverse(model))) * normalCoords);
	wPos = vec3(worldPos);
	vec4 vertPos = projection * view * worldPos;
	fragPosInLightSpace = LightSpaceMatrix * worldPos;
	texturesCoords = textureCoords;
	gl_Position = vertPos;
}